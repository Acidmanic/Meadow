using Meadow.Scaffolding.Attributes;
using Meadow.Scaffolding.Extensions;
using Meadow.Scaffolding.Snippets;
using Meadow.Scaffolding.Snippets.Builtin;

namespace Meadow.MySql.Snippets;

[CommonSnippet(CommonSnippets.InsertProcedure)]
public class InsertSnippet : ISnippet
{
    public ISnippetToolbox Toolbox { get; set; } = SnippetToolbox.Null;
    
    public string KeyTableName => Toolbox.ProcessedType.NameConvention.TableName;
    public string KeyInsertColumns => Toolbox.GetNoneAutoGeneratedColumns();
    public string KeyInsertValues => Toolbox.GetNoneAutoGeneratedValues();

    public string KeyWhere=> Toolbox.ProcessedType.HasId ? "WHERE " + Toolbox.EqualityClause(null,false,Toolbox.ProcessedType.IdParameter!) : Toolbox.WhereByValuesClause();
    
    public string KeyEntityFilterSegment => Toolbox.GetEntityFiltersWhereClause(" AND ", " ");

    
    public string KeyDeclareNewId => "SET @nid = (select LAST_INSERT_ID());" ;

    public string Procedure(string body) => Toolbox.Procedure
    (Toolbox.Configurations.RepetitionHandling, Toolbox.ProcessedType.NameConvention.InsertProcedureName,
        body, string.Empty, Toolbox.ProcessedType.NameConvention.TableName,
        Toolbox.GetNoneAutoGeneratedParameters().ToArray());

    public ISnippet Line => new CommentLineSnippet();

    public string Template => @"
{Procedure}
    INSERT INTO {KeyTableName} ({KeyInsertColumns}) VALUES ({KeyInsertValues});
    {KeyDeclareNewId}
    SELECT TOP 1 * FROM {KeyTableName} WHERE {KeyTableName}.{_keyIdColumn}=@nid{_keyEntityFilterSegment};
{/Procedure}
{Line}
".Trim();
}