using Acidmanic.Utilities.Reflection.Attributes;
using Meadow.Attributes;
using Meadow.Configuration;
using Meadow.SQLite;
using Meadow.Test.Functional.Models;
using Meadow.Utility;
using Xunit;

namespace Meadow.Test.Functional.Suits;

public class ProcessedTypeCollectiveIdSuit
{


    private class PoorModel
    {
        public int Prop1 { get; set; }
        
        public int Prop2 { get; set; }
        
        public int Prop3 { get; set; }
        
        public int Prop4 { get; set; }
    }
    
    private class AutoGeneratedIdModel
    {
        [AutoValuedMember]
        public int Id { get; set; }
        
        public int Prop1 { get; set; }
        
        public int Prop2 { get; set; }
        
        public int Prop3 { get; set; }
        
        public int Prop4 { get; set; }
    }
    
    private class CollectionRitchModel
    {
        [AutoValuedMember]
        public int Id { get; set; }
        
        [CollectiveIdentifier("FirstTwo","Odds")]
        public int Prop1 { get; set; }
        [CollectiveIdentifier("FirstTwo","Evens")]
        public int Prop2 { get; set; }
        [CollectiveIdentifier("SecondTwo","Odds")]
        public int Prop3 { get; set; }
        [CollectiveIdentifier("SecondTwo","Evens")]
        public int Prop4 { get; set; }
        
    }
    


    [Fact]
    public void Should_Get_CorrectProfile()
    {

        var processedType = EntityTypeUtilities.Process<Address>(new MeadowConfiguration(),new SqLiteTypeNameMapper());

        
        
    }
}